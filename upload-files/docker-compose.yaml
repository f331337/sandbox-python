services:
  engine:
    build:
      context: ./engine
    env_file:
      - .env
    networks:
      - traefik-public
      - default
    # depends_on:
    #   - prestart
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=8000

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=Host(`api.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.rule=Host(`api.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-https.tls.certresolver=le

      # Enable redirection for HTTP and HTTPS
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.middlewares=https-redirect
    

  # celery-tasks:
  #   build:
  #     context: engine/.
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   working_dir: /application/engine
  #   depends_on:
  #     - redis
  #     - celery-beat
  #     - monitor 
  #   volumes:
  #     - .:/application
  #   command: celery -A jobs.tasks worker --loglevel=info 
  #
  # celery-beat:
  #   build:
  #     context: engine/.
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   working_dir: /application/engine
  #   command:  celery -A jobs.tasks beat --loglevel=info
  #   volumes:
  #     - .:/application
  #   depends_on:
  #     - redis
  #
  # monitor:
  #   build:
  #     context: engine/.
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   ports:
  #     - "127.0.0.1:5555:5555"
  #   command: celery -A jobs.tasks flower --port=5555
  #   volumes:
  #     - .:/application
  #   depends_on:
  #     - redis
  #
  # redis:
  #   image: "redis:alpine"
  #   volumes:
  #     - redis-data:/data
  #   command: ["redis-server", "--appendonly", "yes"]
  #
  fe:
    build:
      context: ./fe
      args:
        - VITE_API_URL=https://api.${DOMAIN?Variable not set}
        - NODE_ENV=production
    ports:
     - "5173:80"
    networks:
      - traefik-public
      - default
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public

      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80

      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=Host(`app.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=http

      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`app.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le

      # Enable redirection for HTTP and HTTPS
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect


  # postgres-db:
  #   image: postgres:15
  #   restart: always
  #   ports:
  #     - "127.0.0.1:5432:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 10s
  #     retries: 5
  #     start_period: 30s
  #     timeout: 10s
  #   environment:
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
  #     - POSTGRES_USER=${POSTGRES_USER?Variable not set}
  #     - POSTGRES_DB=${POSTGRES_DB?Variable not set}
  #   volumes:
  #     - engine-db-data:/var/lib/postgresql/data

  # prestart:
  #   build:
  #     context: engine/.
  #   env_file:
  #     - .env
  #   networks:
  #     - traefik-public
  #     - default
  #   depends_on:
  #     postgres-db:
  #         condition: service_healthy
  #         restart: true
  #     celery-tasks:
  #       condition: service_started
  #
  #   command: bash scripts/prestart.sh

volumes:
  engine-db-data:
  # redis-data:

networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true
